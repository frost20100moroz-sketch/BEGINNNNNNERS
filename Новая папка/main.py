#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
TG-CASE 2026 - Main Application File
–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import http.server
import socketserver
import webbrowser
import os
import sys
from pathlib import Path
import json
import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
CONFIG = {
    'host': 'localhost',
    'port': 8000,
    'auto_open': True,
    'debug': True,
    'site_name': 'TG-CASE 2026',
    'version': '1.0.0'
}

class TGCaseHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
    """–ö–∞—Å—Ç–æ–º–Ω—ã–π HTTP handler –¥–ª—è —Å–∞–π—Ç–∞ TG-CASE"""

    def __init__(self, *args, **kwargs):
        super().__init__(*args, directory=os.getcwd(), **kwargs)

    def end_headers(self):
        # –î–æ–±–∞–≤–ª—è–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')

        # –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
        if self.path.endswith(('.css', '.js', '.png', '.jpg', '.ico')):
            self.send_header('Cache-Control', 'public, max-age=31536000')
        else:
            self.send_header('Cache-Control', 'no-cache')

        super().end_headers()

    def do_GET(self):
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
        if CONFIG['debug']:
            print(f"[{datetime.datetime.now().strftime('%H:%M:%S')}] GET {self.path}")

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –ø—É—Ç–∏
        if self.path == '/':
            self.path = '/index.html'

        super().do_GET()

    def log_message(self, format, *args):
        # –ö–∞—Å—Ç–æ–º–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        if CONFIG['debug']:
            print(f"[SERVER] {format % args}")

def check_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    required_files = [
        'index.html',
        'assets/css/styles.css',
        'assets/js/app.js'
    ]

    missing_files = []
    for file_path in required_files:
        if not Path(file_path).exists():
            missing_files.append(file_path)

    if missing_files:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã:")
        for file in missing_files:
            print(f"   - {file}")
        print("\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–ª–∏ –∞—Ä—Ö–∏–≤ —Å —Å–∞–π—Ç–æ–º –≤ —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É")
        return False

    return True

def show_server_info():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ"""
    print("=" * 60)
    print(f"üöÄ {CONFIG['site_name']} v{CONFIG['version']}")
    print("=" * 60)
    print(f"üìç –ê–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞: http://{CONFIG['host']}:{CONFIG['port']}")
    print(f"üìÅ –ö–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞: {os.getcwd()}")
    print(f"üåê –ê–≤—Ç–æ–æ—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞: {'–î–∞' if CONFIG['auto_open'] else '–ù–µ—Ç'}")
    print(f"üêõ –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏: {'–í–∫–ª—é—á–µ–Ω' if CONFIG['debug'] else '–í—ã–∫–ª—é—á–µ–Ω'}")
    print("=" * 60)
    print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:")
    pages = [
        ("–ì–ª–∞–≤–Ω–∞—è", "/"),
        ("–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤", "/top.html"),
        ("FAQ", "/faq.html"),
        ("Upgrader", "/upgrader.html"),
        ("–ü—Ä–æ—Ñ–∏–ª—å", "/profile.html")
    ]

    for name, path in pages:
        print(f"   ‚Ä¢ {name}: http://{CONFIG['host']}:{CONFIG['port']}{path}")

    print("\n‚å®Ô∏è  –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
    print("   ‚Ä¢ Ctrl+C - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä")
    print("   ‚Ä¢ r + Enter - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å")
    print("   ‚Ä¢ o + Enter - –æ—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("   ‚Ä¢ q + Enter - –≤—ã–π—Ç–∏")
    print("=" * 60)

def start_server():
    """–ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        with socketserver.TCPServer((CONFIG['host'], CONFIG['port']), TGCaseHTTPRequestHandler) as httpd:
            show_server_info()

            # –ê–≤—Ç–æ–æ—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
            if CONFIG['auto_open']:
                url = f"http://{CONFIG['host']}:{CONFIG['port']}"
                try:
                    webbrowser.open(url)
                    print(f"üåê –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç: {url}")
                except Exception as e:
                    print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä: {e}")

            print(f"\n‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print("   –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏\n")

            # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
            httpd.serve_forever()

    except KeyboardInterrupt:
        print("\n\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except OSError as e:
        if e.errno == 48:  # Address already in use
            print(f"‚ùå –ü–æ—Ä—Ç {CONFIG['port']} —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!")
            print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç –∏–ª–∏ –∑–∞–∫—Ä–æ–π—Ç–µ –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–µ—Ä")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

def setup_environment():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    os.makedirs('assets/css', exist_ok=True)
    os.makedirs('assets/js', exist_ok=True)
    os.makedirs('assets/images', exist_ok=True)

    # –°–æ–∑–¥–∞–Ω–∏–µ .gitignore –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    gitignore_content = """# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/
env.bak/
venv.bak/

# IDE
.vscode/
.idea/
*.swp
*.swo

# OS
.DS_Store
Thumbs.db

# Logs
*.log

# Temporary files
*.tmp
*.temp
"""

    if not Path('.gitignore').exists():
        with open('.gitignore', 'w', encoding='utf-8') as f:
            f.write(gitignore_content)
        print("üìù –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .gitignore")

def interactive_mode():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    while True:
        try:
            command = input("\n> ").strip().lower()

            if command == 'q':
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            elif command == 'r':
                print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...")
                start_server()
            elif command == 'o':
                url = f"http://{CONFIG['host']}:{CONFIG['port']}"
                webbrowser.open(url)
                print(f"üåê –û—Ç–∫—Ä—ã—Ç–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: {url}")
            elif command == 'help' or command == 'h':
                print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
                print("   ‚Ä¢ r - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä")
                print("   ‚Ä¢ o - –æ—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
                print("   ‚Ä¢ q - –≤—ã–π—Ç–∏")
                print("   ‚Ä¢ help - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å")
            else:
                print("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ 'help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏")

        except KeyboardInterrupt:
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        except EOFError:
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéÆ –ó–∞–ø—É—Å–∫ TG-CASE 2026 Development Server...")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤–µ—Ä—Å–∏–∏
    if sys.version_info < (3, 6):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.6 –∏–ª–∏ –≤—ã—à–µ")
        print(f"   –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {sys.version}")
        sys.exit(1)

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    setup_environment()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    if not check_files():
        sys.exit(1)

    print("‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1:
        if '--port' in sys.argv:
            port_index = sys.argv.index('--port') + 1
            if port_index < len(sys.argv):
                try:
                    CONFIG['port'] = int(sys.argv[port_index])
                except ValueError:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ—Ä—Ç–∞")
                    sys.exit(1)

        if '--no-browser' in sys.argv:
            CONFIG['auto_open'] = False

        if '--debug' in sys.argv:
            CONFIG['debug'] = True

    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    start_server()

    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º –ø–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
    interactive_mode()

if __name__ == '__main__':
    main()
